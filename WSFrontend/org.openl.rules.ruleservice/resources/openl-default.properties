ruleservice.openl.home = ${openl.home}

ruleservice.isProvideRuntimeContext = true
ruleservice.isSupportVariations = false

ruleservice.datasource.filesystem.supportDeployments = false
ruleservice.datasource.groups =
ruleservice.datasource.deploy.classpath.jars = true

ruleservice.datasource.propertiesFolder =

ruleservice.instantiation.strategy.lazy = true
ruleservice.instantiation.strategy.maxthreadsforcompile = 3

production-repository.factory = org.openl.rules.repository.LocalRepositoryFactory
# Other repository factories:
#production-repository.factory = org.openl.rules.repository.db.JdbcDBRepositoryFactory
#production-repository.factory = org.openl.rules.repository.db.DatasourceDBRepositoryFactory
#production-repository.factory = org.openl.rules.repository.aws.S3Repository
#production-repository.factory = org.openl.rules.repository.git.GitRepository
#production-repository.factory = org.openl.rules.repository.zip.ZippedLocalRepository

# ruleservice.datasource.dir - is deprecated. Use production-repository.uri instead.
ruleservice.datasource.dir = ${ruleservice.openl.home}/openl-ruleservice/datasource
production-repository.uri = ${ruleservice.datasource.dir}
production-repository.login =
production-repository.password =

### AWS S3 Specific
# A logical unit of storage in AWS object storage service. Globally unique.
production-repository.bucket-name =
# AWS Region that is geographically close to you to optimize latency, minimize costs etc.
production-repository.region-name =
# Alphanumeric text string that is used to identify the user who owns the account.
production-repository.access-key =
# Plays the role of a password for a given access-key.
production-repository.secret-key =
###

### Git Specific
# Local path for Git repository.
production-repository.local-repository-path = ${ruleservice.openl.home}/git
# The branch where the changes will be comitted.
production-repository.branch = master
# Prefix for automatically generated tag which will be added to every commit.
production-repository.tag-prefix =
# Comment template for commits. Use {username} for predefined OpenL-specific Commit Type used by OpenL,
# {user-message} for meaningful message describing commit, {username} for commit author.
production-repository.comment-template = {user-message} Author: {username}. Commit type: {commit-type}.
# Committer's display name. If null, user name will be WebStudio user name.
production-repository.user-display-name =
# Committer's email. If null, email will be empty.
production-repository.user-email =
# Repository connection timeout in seconds. Must be greater than zero.
production-repository.connection-timeout = 60
###

### AWS S3 and Git Specific
# Repository changes check interval in seconds. Must be greater than 0.
production-repository.listener-timer-period = 10
###

# The path in repository where Deployments are stored. Must end with "/".
production-repository.base.path = deploy/

#System Properties
custom.spreadsheet.type = true
dispatching.mode = java
dispatching.validation = false

#Filter deployments by name from datasource. Deployment names should be specified using comma separator
#Patterns can be specified using wildcard letter, for example: rule-*
ruleservice.datasource.deployments=
