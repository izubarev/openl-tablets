ARG JDK=11-slim-buster

FROM openjdk:$JDK

ARG VERSION="latest"
ARG SERVER="https://repo.maven.apache.org/maven2"

RUN set -eux ; \
    \
# Prepare environment. Install required utils for Docker image building.
    savedAptMark="$(apt-mark showmanual)"; \
    \
    apt-get update ; \
    apt-get install -y --no-install-recommends \
    wget \
    unzip \
    gnupg \
    libxml2-utils \
    ; \
    \
# Clean up temporaries
    rm -rf /var/lib/apt/lists/* ; \
    \
# Download artifact.
    artifactUrl="$SERVER/org/openl/rules/demo/openl-demo-app" ; \
    if [ "$VERSION" = "latest" ] ; then \
      version="$(wget -qO - $artifactUrl/maven-metadata.xml \
               | xmllint --xpath /metadata/versioning/$VERSION/text\(\) - )" ; \
    else \
      version=$VERSION ; \
    fi ; \
    downloadUrl="$artifactUrl/$version/openl-demo-app-$version.zip" ; \
    \
    wget --progress=dot:giga -O demo.zip "$downloadUrl" ; \
    wget --progress=dot:giga -O demo.zip.asc "$downloadUrl.asc" ; \
    \
# GPG verification
    export GNUPGHOME="$(mktemp -d)" ; \
    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 902B17732F38021331F3019F82521DFA3BF8F6FC ; \
    gpg --batch --verify demo.zip.asc demo.zip ; \
    gpgconf --kill all ; \
    rm -rf "$GNUPGHOME" ; \
    rm demo.zip.asc ; \
    \
# Unpack demo files
    unzip -q demo.zip ; \
    rm demo.zip ; \
    \
    demoDir=$(ls | grep apache-tomcat-) ; \
    mv "$demoDir" /demo ; \
    \
    cd demo/webapps ; \
    unzip -q webservice.war -d webservice ; \
    unzip -q webstudio.war -d webstudio ; \
    rm *.war ; \
    \
# Permission for rootless mode (for running as non-root)
    cd .. ; \
    chmod 777 logs temp work ; \
    chmod 777 -R openl-demo ; \
    \
# Cleanup apt-get installations
    apt-mark auto '.*' > /dev/null ; \
    [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null ; \
    apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false ; \
    \
# Install fonts required for Apache POI (export into Excel with autowidth of columns)
    apt-get update ; \
    apt-get install -y --no-install-recommends \
    fontconfig ; \
    rm -rf /var/lib/apt/lists/*


WORKDIR /demo

EXPOSE 8080

ENV JAVA_OPTS="-XX:MaxRAMPercentage=90.0"

#Start Tomcat
CMD export CATALINA_OPTS="-Dopenl.home=./openl-demo -Dws.port=8080 $CATALINA_OPTS" && sh bin/catalina.sh start && tail -f /dev/null
