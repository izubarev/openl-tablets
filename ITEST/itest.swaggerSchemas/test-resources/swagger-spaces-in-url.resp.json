{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "service name with spaces"
  },
  "basePath": "/service%20name%20with%20spaces",
  "paths": {
    "/sumTwoDoubles": {
      "post": {
        "summary": "Double sumTwoDoubles(Double, Double)",
        "description": "Rules method: java.lang.Double sumTwoDoubles(java.lang.Double a, java.lang.Double b)",
        "operationId": "sumTwoDoubles",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SumTwoDoublesRequest0"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          "422": {
            "description": "Custom user errors in rules or validation errors in input parameters",
            "examples": {
              "application/json": {
                "message": "Some message",
                "type": "USER_ERROR"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          },
          "400": {
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc.",
            "examples": {
              "application/json": {
                "message": "Cannot parse 'bar' to JSON",
                "type": "BAD_REQUEST"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          },
          "500": {
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc.",
            "examples": {
              "application/json": {
                "message": "Failed to load lazy method.",
                "type": "COMPILATION"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          }
        }
      }
    },
    "/calVehicleYear": {
      "post": {
        "summary": "Integer calVehicleYear(CalVehicleYearRequest, Double)",
        "description": "Rules method: java.lang.Integer calVehicleYear(org.openl.generated.beans.CalVehicleYearRequest v, java.lang.Double a)",
        "operationId": "calVehicleYear",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CalVehicleYearRequest0"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          "422": {
            "description": "Custom user errors in rules or validation errors in input parameters",
            "examples": {
              "application/json": {
                "message": "Some message",
                "type": "USER_ERROR"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          },
          "400": {
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc.",
            "examples": {
              "application/json": {
                "message": "Cannot parse 'bar' to JSON",
                "type": "BAD_REQUEST"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          },
          "500": {
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc.",
            "examples": {
              "application/json": {
                "message": "Failed to load lazy method.",
                "type": "COMPILATION"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          }
        }
      }
    },
    "/bar": {
      "post": {
        "summary": "String bar(SumTwoDoublesRequest)",
        "description": "Rules method: java.lang.String bar(org.openl.generated.beans.SumTwoDoublesRequest bar)",
        "operationId": "bar",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SumTwoDoublesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            }
          },
          "422": {
            "description": "Custom user errors in rules or validation errors in input parameters",
            "examples": {
              "application/json": {
                "message": "Some message",
                "type": "USER_ERROR"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          },
          "400": {
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc.",
            "examples": {
              "application/json": {
                "message": "Cannot parse 'bar' to JSON",
                "type": "BAD_REQUEST"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          },
          "500": {
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc.",
            "examples": {
              "application/json": {
                "message": "Failed to load lazy method.",
                "type": "COMPILATION"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "JAXRSErrorResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "USER_ERROR",
            "RULES_RUNTIME",
            "COMPILATION",
            "SYSTEM",
            "BAD_REQUEST",
            "VALIDATION"
          ]
        },
        "details": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SumTwoDoublesRequest0": {
      "type": "object",
      "properties": {
        "a": {
          "type": "number",
          "format": "double"
        },
        "b": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "CalVehicleYearRequest": {
      "type": "object",
      "properties": {
        "modelYear": {
          "type": "integer",
          "format": "int32"
        },
        "vehEffectiveYear": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "CalVehicleYearRequest0": {
      "type": "object",
      "properties": {
        "v": {
          "$ref": "#/definitions/CalVehicleYearRequest"
        },
        "a": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "SumTwoDoublesRequest": {
      "type": "object",
      "properties": {
        "foo": {
          "type": "string"
        }
      }
    }
  }
}