{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "EPBDS-10595_EPBDS-10595"
  },
  "basePath": "/EPBDS-10595/EPBDS-10595",
  "paths": {
    "/myRule2": {
      "post": {
        "summary": "Double myRule2(MyDatatype[], String)",
        "description": "Rules method: java.lang.Double myRule2(org.openl.generated.beans.MyDatatype[] inputParam, java.lang.String x)",
        "operationId": "myRule2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/MyRule2Request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          "422": {
            "description": "Custom user errors in rules or validation errors in input parameters",
            "examples": {
              "application/json": {
                "message": "Some message",
                "type": "USER_ERROR"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          },
          "400": {
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc.",
            "examples": {
              "application/json": {
                "message": "Cannot parse 'bar' to JSON",
                "type": "BAD_REQUEST"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          },
          "500": {
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc.",
            "examples": {
              "application/json": {
                "message": "Failed to load lazy method.",
                "type": "COMPILATION"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          }
        }
      }
    },
    "/myRule": {
      "post": {
        "summary": "Double myRule(MyDatatype)",
        "description": "Rules method: java.lang.Double myRule(org.openl.generated.beans.MyDatatype inputParam)",
        "operationId": "myRule",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/MyDatatype"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          "422": {
            "description": "Custom user errors in rules or validation errors in input parameters",
            "examples": {
              "application/json": {
                "message": "Some message",
                "type": "USER_ERROR"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          },
          "400": {
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc.",
            "examples": {
              "application/json": {
                "message": "Cannot parse 'bar' to JSON",
                "type": "BAD_REQUEST"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          },
          "500": {
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc.",
            "examples": {
              "application/json": {
                "message": "Failed to load lazy method.",
                "type": "COMPILATION"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          }
        }
      }
    },
    "/myRule1": {
      "post": {
        "summary": "MyDatatype[] myRule(MyDatatype, String)",
        "description": "Rules method: org.openl.generated.beans.MyDatatype[] myRule(org.openl.generated.beans.MyDatatype inputParam, java.lang.String x)",
        "operationId": "myRule_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/MyRuleRequest1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MyDatatype"
              }
            }
          },
          "422": {
            "description": "Custom user errors in rules or validation errors in input parameters",
            "examples": {
              "application/json": {
                "message": "Some message",
                "type": "USER_ERROR"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          },
          "400": {
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc.",
            "examples": {
              "application/json": {
                "message": "Cannot parse 'bar' to JSON",
                "type": "BAD_REQUEST"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          },
          "500": {
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc.",
            "examples": {
              "application/json": {
                "message": "Failed to load lazy method.",
                "type": "COMPILATION"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          }
        }
      }
    },
    "/returnMyDatatype": {
      "post": {
        "summary": "MyDatatype returnMyDatatype(MyDatatype)",
        "description": "Method: org.openl.generated.beans.MyDatatype returnMyDatatype(org.openl.generated.beans.MyDatatype)",
        "operationId": "returnMyDatatype",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/MyDatatype"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/MyDatatype"
            }
          },
          "422": {
            "description": "Custom user errors in rules or validation errors in input parameters",
            "examples": {
              "application/json": {
                "message": "Some message",
                "type": "USER_ERROR"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          },
          "400": {
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc.",
            "examples": {
              "application/json": {
                "message": "Cannot parse 'bar' to JSON",
                "type": "BAD_REQUEST"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          },
          "500": {
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc.",
            "examples": {
              "application/json": {
                "message": "Failed to load lazy method.",
                "type": "COMPILATION"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          }
        }
      }
    },
    "/inputMyDatatype": {
      "post": {
        "summary": "Object inputMyDatatype(MyDatatype)",
        "description": "Method: java.lang.Object inputMyDatatype(org.openl.generated.beans.MyDatatype)",
        "operationId": "inputMyDatatype",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/MyDatatype"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          },
          "422": {
            "description": "Custom user errors in rules or validation errors in input parameters",
            "examples": {
              "application/json": {
                "message": "Some message",
                "type": "USER_ERROR"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          },
          "400": {
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc.",
            "examples": {
              "application/json": {
                "message": "Cannot parse 'bar' to JSON",
                "type": "BAD_REQUEST"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          },
          "500": {
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc.",
            "examples": {
              "application/json": {
                "message": "Failed to load lazy method.",
                "type": "COMPILATION"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "JAXRSErrorResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "USER_ERROR",
            "RULES_RUNTIME",
            "COMPILATION",
            "SYSTEM",
            "BAD_REQUEST",
            "VALIDATION"
          ]
        },
        "details": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "MyDatatype": {
      "type": "object",
      "properties": {
        "param1": {
          "type": "string"
        },
        "param2": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "MyRule2Request": {
      "type": "object",
      "properties": {
        "inputParam": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MyDatatype"
          }
        },
        "x": {
          "type": "string"
        }
      }
    },
    "MyRuleRequest1": {
      "type": "object",
      "properties": {
        "inputParam": {
          "$ref": "#/definitions/MyDatatype"
        },
        "x": {
          "type": "string"
        }
      }
    }
  }
}
