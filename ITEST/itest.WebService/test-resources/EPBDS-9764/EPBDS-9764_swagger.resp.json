{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "EPBDS-9764_EPBDS-9764"
  },
  "basePath": "/REST/EPBDS-9764/EPBDS-9764",
  "paths": {
    "/myMethod5": {
      "post": {
        "summary": "MyMethod5 myMethod5(IRulesRuntimeContext)",
        "description": "Method: org.openl.generated.spreadsheetresults.MyMethod5 myMethod5(org.openl.rules.context.IRulesRuntimeContext)",
        "operationId": "myMethod5",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DefaultRulesRuntimeContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/MyMethod5"
            }
          },
          "422": {
            "description": "Custom user errors in rules or validation errors in input parameters",
            "examples": {
              "application/json": {
                "message": "Some message",
                "type": "USER_ERROR"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          },
          "400": {
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc.",
            "examples": {
              "application/json": {
                "message": "Cannot parse 'bar' to JSON",
                "type": "BAD_REQUEST"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          },
          "500": {
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc.",
            "examples": {
              "application/json": {
                "message": "Failed to load lazy method.",
                "type": "COMPILATION"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          }
        }
      }
    },
    "/getMyType4Data": {
      "post": {
        "summary": "MyType4[] getMyType4Data(IRulesRuntimeContext)",
        "description": "Method: org.openl.generated.beans.MyType4[] getMyType4Data(org.openl.rules.context.IRulesRuntimeContext)",
        "operationId": "getMyType4Data",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DefaultRulesRuntimeContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MyType4"
              }
            }
          },
          "422": {
            "description": "Custom user errors in rules or validation errors in input parameters",
            "examples": {
              "application/json": {
                "message": "Some message",
                "type": "USER_ERROR"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          },
          "400": {
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc.",
            "examples": {
              "application/json": {
                "message": "Cannot parse 'bar' to JSON",
                "type": "BAD_REQUEST"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          },
          "500": {
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc.",
            "examples": {
              "application/json": {
                "message": "Failed to load lazy method.",
                "type": "COMPILATION"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          }
        }
      }
    },
    "/myMethod6": {
      "post": {
        "summary": "MyMethod6 myMethod6(IRulesRuntimeContext)",
        "description": "Method: org.openl.generated.spreadsheetresults.MyMethod6 myMethod6(org.openl.rules.context.IRulesRuntimeContext)",
        "operationId": "myMethod6",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DefaultRulesRuntimeContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/MyMethod6"
            }
          },
          "422": {
            "description": "Custom user errors in rules or validation errors in input parameters",
            "examples": {
              "application/json": {
                "message": "Some message",
                "type": "USER_ERROR"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          },
          "400": {
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc.",
            "examples": {
              "application/json": {
                "message": "Cannot parse 'bar' to JSON",
                "type": "BAD_REQUEST"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          },
          "500": {
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc.",
            "examples": {
              "application/json": {
                "message": "Failed to load lazy method.",
                "type": "COMPILATION"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          }
        }
      }
    },
    "/getMyType1Data": {
      "post": {
        "summary": "MyType1[] getMyType1Data(IRulesRuntimeContext)",
        "description": "Method: org.openl.generated.beans.MyType1[] getMyType1Data(org.openl.rules.context.IRulesRuntimeContext)",
        "operationId": "getMyType1Data",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DefaultRulesRuntimeContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MyType1"
              }
            }
          },
          "422": {
            "description": "Custom user errors in rules or validation errors in input parameters",
            "examples": {
              "application/json": {
                "message": "Some message",
                "type": "USER_ERROR"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          },
          "400": {
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc.",
            "examples": {
              "application/json": {
                "message": "Cannot parse 'bar' to JSON",
                "type": "BAD_REQUEST"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          },
          "500": {
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc.",
            "examples": {
              "application/json": {
                "message": "Failed to load lazy method.",
                "type": "COMPILATION"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          }
        }
      }
    },
    "/getMyType2Data": {
      "post": {
        "summary": "MyType2[] getMyType2Data(IRulesRuntimeContext)",
        "description": "Method: org.openl.generated.beans.MyType2[] getMyType2Data(org.openl.rules.context.IRulesRuntimeContext)",
        "operationId": "getMyType2Data",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DefaultRulesRuntimeContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MyType2"
              }
            }
          },
          "422": {
            "description": "Custom user errors in rules or validation errors in input parameters",
            "examples": {
              "application/json": {
                "message": "Some message",
                "type": "USER_ERROR"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          },
          "400": {
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc.",
            "examples": {
              "application/json": {
                "message": "Cannot parse 'bar' to JSON",
                "type": "BAD_REQUEST"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          },
          "500": {
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc.",
            "examples": {
              "application/json": {
                "message": "Failed to load lazy method.",
                "type": "COMPILATION"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          }
        }
      }
    },
    "/getMyType3Data": {
      "post": {
        "summary": "MyType3[] getMyType3Data(IRulesRuntimeContext)",
        "description": "Method: org.openl.generated.beans.MyType3[] getMyType3Data(org.openl.rules.context.IRulesRuntimeContext)",
        "operationId": "getMyType3Data",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DefaultRulesRuntimeContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MyType3"
              }
            }
          },
          "422": {
            "description": "Custom user errors in rules or validation errors in input parameters",
            "examples": {
              "application/json": {
                "message": "Some message",
                "type": "USER_ERROR"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          },
          "400": {
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc.",
            "examples": {
              "application/json": {
                "message": "Cannot parse 'bar' to JSON",
                "type": "BAD_REQUEST"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          },
          "500": {
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc.",
            "examples": {
              "application/json": {
                "message": "Failed to load lazy method.",
                "type": "COMPILATION"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          }
        }
      }
    },
    "/myMethod": {
      "post": {
        "summary": "MyMethod myMethod(IRulesRuntimeContext, MyType1, MyType2, MyType3, MyType4)",
        "description": "Method: org.openl.generated.spreadsheetresults.MyMethod myMethod(org.openl.rules.context.IRulesRuntimeContext, org.openl.generated.beans.MyType1, org.openl.generated.beans.MyType2, org.openl.generated.beans.MyType3, org.openl.generated.beans.MyType4)",
        "operationId": "myMethod",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/MyMethodRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/MyMethod"
            }
          },
          "422": {
            "description": "Custom user errors in rules or validation errors in input parameters",
            "examples": {
              "application/json": {
                "message": "Some message",
                "type": "USER_ERROR"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          },
          "400": {
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc.",
            "examples": {
              "application/json": {
                "message": "Cannot parse 'bar' to JSON",
                "type": "BAD_REQUEST"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          },
          "500": {
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc.",
            "examples": {
              "application/json": {
                "message": "Failed to load lazy method.",
                "type": "COMPILATION"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          }
        }
      }
    },
    "/myMethod3": {
      "post": {
        "summary": "MyMethod3 myMethod3(IRulesRuntimeContext, MyType1, MyType2, MyType3)",
        "description": "Method: org.openl.generated.spreadsheetresults.MyMethod3 myMethod3(org.openl.rules.context.IRulesRuntimeContext, org.openl.generated.beans.MyType1, org.openl.generated.beans.MyType2, org.openl.generated.beans.MyType3)",
        "operationId": "myMethod3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/MyMethod3Request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/MyMethod3"
            }
          },
          "422": {
            "description": "Custom user errors in rules or validation errors in input parameters",
            "examples": {
              "application/json": {
                "message": "Some message",
                "type": "USER_ERROR"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          },
          "400": {
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc.",
            "examples": {
              "application/json": {
                "message": "Cannot parse 'bar' to JSON",
                "type": "BAD_REQUEST"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          },
          "500": {
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc.",
            "examples": {
              "application/json": {
                "message": "Failed to load lazy method.",
                "type": "COMPILATION"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          }
        }
      }
    },
    "/myMethod4": {
      "post": {
        "summary": "MyMethod4 myMethod4(IRulesRuntimeContext)",
        "description": "Method: org.openl.generated.spreadsheetresults.MyMethod4 myMethod4(org.openl.rules.context.IRulesRuntimeContext)",
        "operationId": "myMethod4",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DefaultRulesRuntimeContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/MyMethod4"
            }
          },
          "422": {
            "description": "Custom user errors in rules or validation errors in input parameters",
            "examples": {
              "application/json": {
                "message": "Some message",
                "type": "USER_ERROR"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          },
          "400": {
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc.",
            "examples": {
              "application/json": {
                "message": "Cannot parse 'bar' to JSON",
                "type": "BAD_REQUEST"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          },
          "500": {
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc.",
            "examples": {
              "application/json": {
                "message": "Failed to load lazy method.",
                "type": "COMPILATION"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          }
        }
      }
    },
    "/myMethod2": {
      "post": {
        "summary": "MyMethod2 myMethod2(IRulesRuntimeContext, MyType1, MyType2, MyType3, MyType4)",
        "description": "Method: org.openl.generated.spreadsheetresults.MyMethod2 myMethod2(org.openl.rules.context.IRulesRuntimeContext, org.openl.generated.beans.MyType1, org.openl.generated.beans.MyType2, org.openl.generated.beans.MyType3, org.openl.generated.beans.MyType4)",
        "operationId": "myMethod2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/MyMethod2Request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/MyMethod2"
            }
          },
          "422": {
            "description": "Custom user errors in rules or validation errors in input parameters",
            "examples": {
              "application/json": {
                "message": "Some message",
                "type": "USER_ERROR"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          },
          "400": {
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc.",
            "examples": {
              "application/json": {
                "message": "Cannot parse 'bar' to JSON",
                "type": "BAD_REQUEST"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          },
          "500": {
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc.",
            "examples": {
              "application/json": {
                "message": "Failed to load lazy method.",
                "type": "COMPILATION"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Base": {
      "type": "object",
      "required": [
        "@class"
      ],
      "discriminator": "@class",
      "properties": {
        "@class": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "MyMethod5": {
      "type": "object",
      "properties": {
        "Step0": {
          "$ref": "#/definitions/MyType5"
        },
        "Step1": {
          "type": "string"
        },
        "Step2": {
          "type": "string"
        },
        "Step3": {
          "type": "string"
        },
        "Step4": {
          "type": "string"
        }
      }
    },
    "MyType1": {
      "allOf": [
        {
          "$ref": "#/definitions/MyType1SuperType"
        },
        {
          "type": "object",
          "properties": {
            "field4": {
              "type": "string"
            }
          },
          "additionalProperties": {}
        }
      ]
    },
    "MyType1SuperType": {
      "allOf": [
        {
          "$ref": "#/definitions/Base"
        },
        {
          "type": "object",
          "properties": {
            "field3": {
              "type": "string"
            }
          },
          "additionalProperties": {}
        }
      ]
    },
    "MyType2": {
      "allOf": [
        {
          "$ref": "#/definitions/MyType2SuperClass"
        },
        {
          "type": "object",
          "properties": {
            "field2": {
              "type": "string"
            }
          },
          "additionalProperties": {}
        }
      ]
    },
    "MyType2SuperClass": {
      "allOf": [
        {
          "$ref": "#/definitions/Base"
        },
        {
          "type": "object",
          "properties": {
            "field4": {
              "type": "string"
            }
          },
          "additionalProperties": {}
        }
      ]
    },
    "MyType3": {
      "allOf": [
        {
          "$ref": "#/definitions/MyType3SuperClass"
        },
        {
          "type": "object",
          "properties": {
            "field2": {
              "type": "string"
            }
          },
          "additionalProperties": {}
        }
      ]
    },
    "MyType3SuperClass": {
      "allOf": [
        {
          "$ref": "#/definitions/Base"
        },
        {
          "type": "object",
          "properties": {
            "field4": {
              "type": "string"
            }
          },
          "additionalProperties": {}
        }
      ]
    },
    "MyType5": {
      "allOf": [
        {
          "$ref": "#/definitions/MyType5SuperType"
        },
        {
          "type": "object",
          "properties": {
            "field4": {
              "type": "string",
              "default": "defaultValue4"
            }
          },
          "additionalProperties": {}
        }
      ]
    },
    "MyType5SuperType": {
      "allOf": [
        {
          "$ref": "#/definitions/Base"
        },
        {
          "type": "object",
          "properties": {
            "field3": {
              "type": "string",
              "default": "defaultValue3"
            }
          },
          "additionalProperties": {}
        }
      ]
    },
    "JAXRSErrorResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "USER_ERROR",
            "RULES_RUNTIME",
            "COMPILATION",
            "SYSTEM",
            "BAD_REQUEST",
            "VALIDATION"
          ]
        },
        "details": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DefaultRulesRuntimeContext": {
      "type": "object",
      "properties": {
        "currentDate": {
          "type": "string",
          "format": "date-time"
        },
        "requestDate": {
          "type": "string",
          "format": "date-time"
        },
        "lob": {
          "type": "string"
        },
        "nature": {
          "type": "string"
        },
        "usState": {
          "type": "string",
          "enum": [
            "AL",
            "AK",
            "AZ",
            "AR",
            "CA",
            "CO",
            "CT",
            "DC",
            "DE",
            "FL",
            "GA",
            "HI",
            "ID",
            "IL",
            "IN",
            "IA",
            "KS",
            "KY",
            "LA",
            "ME",
            "MD",
            "MA",
            "MI",
            "MN",
            "MS",
            "MO",
            "MT",
            "NE",
            "NV",
            "NH",
            "NJ",
            "NM",
            "NY",
            "NC",
            "ND",
            "OH",
            "OK",
            "OR",
            "PA",
            "PR",
            "RI",
            "SC",
            "SD",
            "TN",
            "TX",
            "UT",
            "VT",
            "VA",
            "WA",
            "WV",
            "WI",
            "WY"
          ]
        },
        "country": {
          "type": "string",
          "enum": [
            "AE", "AL", "AR", "AS", "AT", "AU", "BA", "BE", "BG", "BH", "BO", "BR", "BY", "CA", "CH", "CK", "CL", "CN",
            "CO", "CR", "CS", "CY", "CZ", "DE", "DK", "DO", "DZ", "EC", "EE", "EG", "ES", "FI", "FJ", "FR", "GB", "GR",
            "GT", "HK", "HN", "HR", "HU", "ID", "IE", "IL", "IN", "IQ", "IS", "IT", "JO", "JP", "KW", "LB", "LT", "LU",
            "LV", "MA", "MK", "MT", "MX", "MY", "NI", "NL", "NO", "NZ", "OM", "PA", "PE", "PG", "PH", "PL", "PR", "PT",
            "PY", "QA", "RO", "RU", "SA", "SB", "SD", "SE", "SG", "SI", "SK", "SV", "SY", "TH", "TN", "TO", "TR", "TW",
            "UA", "US", "UY", "VE", "VN", "VU", "WS", "YE", "ZA"
          ]
        },
        "usRegion": {
          "type": "string",
          "enum": [
            "MW",
            "NE",
            "SE",
            "SW",
            "W"
          ]
        },
        "currency": {
          "type": "string",
          "enum": [
            "ALL",
            "DZD",
            "ARS",
            "AUD",
            "BHD",
            "BYR",
            "BOB",
            "BAM",
            "BRL",
            "CAD",
            "CLP",
            "CNY",
            "COP",
            "CRC",
            "HRK",
            "CZK",
            "DKK",
            "DOP",
            "EGP",
            "EUR",
            "GTQ",
            "HNL",
            "HKD",
            "HUF",
            "ISK",
            "INR",
            "IDR",
            "IQD",
            "ILS",
            "JPY",
            "JOD",
            "KWD",
            "LVL",
            "LBP",
            "LTL",
            "MKD",
            "MYR",
            "MXN",
            "MAD",
            "NZD",
            "NIO",
            "NOK",
            "OMR",
            "PAB",
            "PYG",
            "PEN",
            "PHP",
            "PLN",
            "QAR",
            "RON",
            "RUB",
            "SAR",
            "RSD",
            "SGD",
            "ZAR",
            "SDG",
            "SEK",
            "CHF",
            "SYP",
            "TWD",
            "TND",
            "TRY",
            "UAH",
            "AED",
            "GBP",
            "USD",
            "UYU",
            "VEF",
            "VND",
            "YER"
          ]
        },
        "lang": {
          "type": "string",
          "enum": [
            "ALB",
            "ARA",
            "BEL",
            "BUL",
            "CAT",
            "CHI",
            "SCR",
            "CZE",
            "DAN",
            "DUT",
            "ENG",
            "FIN",
            "FRE",
            "GER",
            "GRE",
            "HEB",
            "HIN",
            "HUN",
            "IND",
            "GLE",
            "ITA",
            "JPN",
            "LAV",
            "LIT",
            "MAC",
            "MAY",
            "MLT",
            "NOR",
            "POL",
            "POR",
            "RUM",
            "RUS",
            "SCC",
            "SLO",
            "SPA",
            "THA",
            "TUR",
            "UKR",
            "VIE"
          ]
        },
        "region": {
          "type": "string",
          "enum": [
            "NCSA",
            "EU",
            "EMEA",
            "APJ"
          ]
        },
        "caProvince": {
          "type": "string",
          "enum": [
            "AB",
            "BC",
            "PE",
            "MB",
            "NB",
            "NS",
            "NU",
            "ON",
            "QC",
            "SK",
            "NL",
            "YT",
            "NT"
          ]
        },
        "caRegion": {
          "type": "string",
          "enum": [
            "QC",
            "HQ"
          ]
        }
      }
    },
    "MyType4": {
      "type": "object",
      "properties": {
        "field2": {
          "$ref": "#/definitions/MyType2"
        }
      }
    },
    "MyMethod6": {
      "type": "object",
      "properties": {
        "Step0": {
          "$ref": "#/definitions/MyType5"
        },
        "Step1": {
          "type": "string"
        },
        "Step2": {
          "type": "string"
        },
        "Step3": {
          "type": "string"
        },
        "Step4": {
          "type": "string"
        }
      }
    },
    "MyMethod": {
      "type": "object",
      "properties": {
        "Step1": {
          "type": "string"
        },
        "Step2": {
          "type": "string"
        },
        "Step3": {
          "type": "string"
        },
        "Step4": {
          "type": "string"
        },
        "Step5": {
          "type": "string"
        },
        "Step6": {
          "type": "string"
        },
        "Step7": {
          "type": "string"
        },
        "Step8": {
          "type": "string"
        },
        "Step9": {
          "type": "string"
        },
        "Step10": {
          "type": "string"
        },
        "Step11": {
          "type": "string"
        },
        "Step12": {
          "type": "string"
        },
        "Step13": {
          "type": "string"
        },
        "Step14": {
          "type": "string"
        },
        "Step15": {
          "type": "string"
        },
        "Step16": {
          "type": "string"
        }
      }
    },
    "MyMethodRequest": {
      "type": "object",
      "properties": {
        "runtimeContext": {
          "$ref": "#/definitions/DefaultRulesRuntimeContext"
        },
        "myType1": {
          "$ref": "#/definitions/MyType1"
        },
        "myType2": {
          "$ref": "#/definitions/MyType2"
        },
        "myType3": {
          "$ref": "#/definitions/MyType3"
        },
        "myType4": {
          "$ref": "#/definitions/MyType4"
        }
      }
    },
    "MyMethod3": {
      "type": "object",
      "properties": {
        "Step1": {
          "type": "string"
        },
        "Step2": {
          "type": "string"
        },
        "Step3": {
          "type": "string"
        },
        "Step4": {
          "type": "string"
        },
        "Step5": {
          "type": "string"
        },
        "Step6": {
          "type": "string"
        },
        "Step7": {
          "type": "string"
        },
        "Step8": {
          "type": "string"
        },
        "Step9": {
          "type": "string"
        },
        "Step10": {
          "type": "string"
        },
        "Step11": {
          "type": "string"
        },
        "Step12": {
          "type": "string"
        }
      }
    },
    "MyMethod3Request": {
      "type": "object",
      "properties": {
        "runtimeContext": {
          "$ref": "#/definitions/DefaultRulesRuntimeContext"
        },
        "myType1": {
          "$ref": "#/definitions/MyType1"
        },
        "myType2": {
          "$ref": "#/definitions/MyType2"
        },
        "myType3": {
          "$ref": "#/definitions/MyType3"
        }
      }
    },
    "MyMethod4": {
      "type": "object",
      "properties": {
        "Step0": {
          "$ref": "#/definitions/MyType1"
        },
        "Step1": {
          "type": "string"
        },
        "Step2": {
          "type": "string"
        },
        "Step3": {
          "type": "string"
        },
        "Step4": {
          "type": "string"
        },
        "Step5": {
          "type": "string"
        }
      }
    },
    "MyMethod2": {
      "type": "object",
      "properties": {
        "Step1": {
          "type": "string"
        },
        "Step2": {
          "type": "string"
        },
        "Step3": {
          "type": "string"
        },
        "Step4": {
          "type": "string"
        },
        "Step5": {
          "type": "string"
        },
        "Step6": {
          "type": "string"
        },
        "Step7": {
          "type": "string"
        },
        "Step8": {
          "type": "string"
        },
        "Step9": {
          "type": "string"
        },
        "Step10": {
          "type": "string"
        },
        "Step11": {
          "type": "string"
        },
        "Step12": {
          "type": "string"
        },
        "Step13": {
          "type": "string"
        },
        "Step14": {
          "type": "string"
        }
      }
    },
    "MyMethod2Request": {
      "type": "object",
      "properties": {
        "runtimeContext": {
          "$ref": "#/definitions/DefaultRulesRuntimeContext"
        },
        "myType1": {
          "$ref": "#/definitions/MyType1"
        },
        "myType2": {
          "$ref": "#/definitions/MyType2"
        },
        "myType3": {
          "$ref": "#/definitions/MyType3"
        },
        "myType4": {
          "$ref": "#/definitions/MyType4"
        }
      }
    }
  }
}