### Git-based repository
# Repository factory ID for org.openl.rules.repository.git.GitRepositoryFactory
repo-git.factory=repo-git
# Location to a remote Git repository
repo-git.uri = https://github.com/user/repo.git
# Local path for Git repository.
repo-git.local-repository-path = ${openl.home}/repositories/name
repo-git.login=
repo-git.password=
# Time to wait after a failed authentication attempt before the next attempt.
# Needed to prevent a user being banned because of brute force attack.
repo-git.failed-authentication-seconds=300
# The maximum number of authentication attempts, after which it will be possible to authorize only after
# resetting the settings or restarting the WebStudio.
# may not have value, in this case there will be no limit on attempts. If the value is 1
# then on the first unsuccessful authentication attempt subsequent attempts will be blocked.
repo-git.max-authentication-attempts=
# Repository changes check interval in seconds. Must be greater than zero.
repo-git.listener-timer-period=10
# Repository connection timeout in seconds. Must be greater than zero.
repo-git.connection-timeout=60
# The branch where the changes will be comitted.
# If this property is not defined then default branch from a remote repository will be used.
# When it is impossible to determine the default branch "master" branch will be used.
repo-git.branch=
# Prefix for automatically generated tag which will be added to every commit.
repo-git.tag-prefix=
# Committer's display name. If null, user name will be WebStudio user name.
repo-git.user-display-name=
# Committer's email. If null, email will be empty.
repo-git.user-email=
# If empty, don't modify "gc.autoDetach" state. Otherwise, save it as a git repository setting.
repo-git.gc-auto-detach=
# Comment message template for Git commits.
# - {username} is replaced by Webstudio username.
# - {user-message} is replaced by user defined commit message. This part of commit message is mandatory.
# - {commit-type} is a system property for commits to recognize commit type from a message. This part of commit message is mandatory.
repo-git.comment-template = {user-message} Author: {username}. Type: {commit-type}.
