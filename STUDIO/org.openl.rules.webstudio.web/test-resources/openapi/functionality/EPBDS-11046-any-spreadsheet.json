{
  "openapi": "3.0.1",
  "info": {
    "title": "AnySprNumberBUg_AnySprNumberBUg",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/webservice/REST/AnySprNumberBUg/AnySprNumberBUg",
      "variables": {}
    }
  ],
  "paths": {
    "/ASOExpense": {
      "post": {
        "summary": "ASOExpense ASOExpense(IRulesRuntimeContext, Integer)",
        "description": "Method: org.openl.generated.spreadsheetresults.ASOExpense ASOExpense(org.openl.rules.context.IRulesRuntimeContext, java.lang.Integer)",
        "operationId": "ASOExpense",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASOExpenseRequest"
              }
            }
          }
        },
        "responses": {
          "422": {
            "description": "Custom user errors in rules or validation errors in input parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                },
                "example": {
                  "message": "Some message",
                  "type": "USER_ERROR"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                },
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                }
              }
            }
          },
          "500": {
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                },
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                }
              }
            }
          },
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASOExpense"
                }
              }
            }
          }
        }
      }
    },
    "/MySpr": {
      "post": {
        "summary": "MySpr MySpr(IRulesRuntimeContext, Integer)",
        "description": "Method: org.openl.generated.spreadsheetresults.MySpr MySpr(org.openl.rules.context.IRulesRuntimeContext, java.lang.Integer)",
        "operationId": "MySpr",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MySprRequest"
              }
            }
          }
        },
        "responses": {
          "422": {
            "description": "Custom user errors in rules or validation errors in input parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                },
                "example": {
                  "message": "Some message",
                  "type": "USER_ERROR"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                },
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                }
              }
            }
          },
          "500": {
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                },
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                }
              }
            }
          },
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MySpr"
                }
              }
            }
          }
        }
      }
    },
    "/myRule": {
      "post": {
        "summary": "AnySpreadsheetResult myRule(IRulesRuntimeContext, Integer)",
        "description": "Method: org.openl.generated.spreadsheetresults.AnySpreadsheetResult myRule(org.openl.rules.context.IRulesRuntimeContext, java.lang.Integer)",
        "operationId": "myRule",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MyRuleRequest"
              }
            }
          }
        },
        "responses": {
          "422": {
            "description": "Custom user errors in rules or validation errors in input parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                },
                "example": {
                  "message": "Some message",
                  "type": "USER_ERROR"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                },
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                }
              }
            }
          },
          "500": {
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                },
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                }
              }
            }
          },
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnySpreadsheetResult"
                }
              }
            }
          }
        }
      }
    },
    "/PlanPremium": {
      "post": {
        "summary": "PlanPremium PlanPremium(IRulesRuntimeContext, Integer)",
        "description": "Method: org.openl.generated.spreadsheetresults.PlanPremium PlanPremium(org.openl.rules.context.IRulesRuntimeContext, java.lang.Integer)",
        "operationId": "PlanPremium",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlanPremiumRequest"
              }
            }
          }
        },
        "responses": {
          "422": {
            "description": "Custom user errors in rules or validation errors in input parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                },
                "example": {
                  "message": "Some message",
                  "type": "USER_ERROR"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                },
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                }
              }
            }
          },
          "500": {
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                },
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                }
              }
            }
          },
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlanPremium"
                }
              }
            }
          }
        }
      }
    },
    "/myFunction": {
      "post": {
        "summary": "MytInfo myFunction(IRulesRuntimeContext, Integer)",
        "description": "Method: org.openl.generated.beans.MytInfo myFunction(org.openl.rules.context.IRulesRuntimeContext, java.lang.Integer)",
        "operationId": "myFunction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MyFunctionRequest"
              }
            }
          }
        },
        "responses": {
          "422": {
            "description": "Custom user errors in rules or validation errors in input parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                },
                "example": {
                  "message": "Some message",
                  "type": "USER_ERROR"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                },
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                }
              }
            }
          },
          "500": {
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                },
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                }
              }
            }
          },
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MytInfo"
                }
              }
            }
          }
        }
      }
    },
    "/myAnyRule": {
      "post": {
        "summary": "MyAnyRule myAnyRule(IRulesRuntimeContext, MyDatatype, Integer, SpreadsheetResult[])",
        "description": "Method: org.openl.generated.spreadsheetresults.MyAnyRule myAnyRule(org.openl.rules.context.IRulesRuntimeContext, org.openl.generated.beans.MyDatatype, java.lang.Integer, org.openl.rules.calc.SpreadsheetResult[])",
        "operationId": "myAnyRule",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MyAnyRuleRequest"
              }
            }
          }
        },
        "responses": {
          "422": {
            "description": "Custom user errors in rules or validation errors in input parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                },
                "example": {
                  "message": "Some message",
                  "type": "USER_ERROR"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                },
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                }
              }
            }
          },
          "500": {
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                },
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                }
              }
            }
          },
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyAnyRule"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "JAXRSErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "USER_ERROR",
              "RULES_RUNTIME",
              "COMPILATION",
              "SYSTEM",
              "BAD_REQUEST",
              "VALIDATION"
            ]
          },
          "details": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ASOExpense": {
        "type": "object",
        "properties": {
          "NeededAnnualPremiumNetComm": {
            "type": "number",
            "format": "double"
          },
          "ExpensesNetCommission": {
            "type": "number",
            "format": "double"
          },
          "RiskAndTaxes": {
            "type": "number",
            "format": "double"
          },
          "LostInterest": {
            "type": "number",
            "format": "double"
          },
          "Lives": {
            "type": "number",
            "format": "double"
          },
          "RiskTaxesPEPM": {
            "type": "number",
            "format": "double"
          },
          "LostInterestPEPM": {
            "type": "number",
            "format": "double"
          },
          "InitialASOFeePEPM": {
            "type": "number",
            "format": "double"
          },
          "PrcntPaidToVSP": {
            "type": "number",
            "format": "double"
          },
          "AnnualToVSP": {
            "type": "number",
            "format": "double"
          },
          "MannualCommission": {
            "type": "number",
            "format": "double"
          },
          "CommissionPEPMOverride": {
            "type": "number",
            "format": "double"
          },
          "PEPMToVSP": {
            "type": "number",
            "format": "double"
          },
          "PEPMToREN0": {
            "type": "number",
            "format": "double"
          },
          "PEPMToREN": {
            "type": "number",
            "format": "double"
          },
          "AdjustedASOFee": {
            "type": "number",
            "format": "double"
          },
          "AnnualASO": {
            "type": "number",
            "format": "double"
          },
          "ProjectedClaimsAnnual": {
            "type": "number",
            "format": "double"
          },
          "NeededAnnualPremiumASO": {
            "type": "number",
            "format": "double"
          },
          "ASOExpensePrcnt": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "ASOExpenseRequest": {
        "type": "object",
        "properties": {
          "runtimeContext": {
            "$ref": "#/components/schemas/DefaultRulesRuntimeContext"
          },
          "totalEnlollment": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "DefaultRulesRuntimeContext": {
        "type": "object",
        "properties": {
          "currentDate": {
            "type": "string",
            "format": "date-time"
          },
          "requestDate": {
            "type": "string",
            "format": "date-time"
          },
          "lob": {
            "type": "string"
          },
          "nature": {
            "type": "string"
          },
          "usState": {
            "type": "string",
            "enum": [
              "AL",
              "AK",
              "AZ",
              "AR",
              "CA",
              "CO",
              "CT",
              "DC",
              "DE",
              "FL",
              "GA",
              "HI",
              "ID",
              "IL",
              "IN",
              "IA",
              "KS",
              "KY",
              "LA",
              "ME",
              "MD",
              "MA",
              "MI",
              "MN",
              "MS",
              "MO",
              "MT",
              "NE",
              "NV",
              "NH",
              "NJ",
              "NM",
              "NY",
              "NC",
              "ND",
              "OH",
              "OK",
              "OR",
              "PA",
              "PR",
              "RI",
              "SC",
              "SD",
              "TN",
              "TX",
              "UT",
              "VT",
              "VA",
              "WA",
              "WV",
              "WI",
              "WY"
            ]
          },
          "country": {
            "type": "string",
            "enum": [
              "AE",
              "AL",
              "AR",
              "AS",
              "AT",
              "AU",
              "BA",
              "BE",
              "BG",
              "BH",
              "BO",
              "BR",
              "BY",
              "CA",
              "CH",
              "CK",
              "CL",
              "CN",
              "CO",
              "CR",
              "CS",
              "CY",
              "CZ",
              "DE",
              "DK",
              "DO",
              "DZ",
              "EC",
              "EE",
              "EG",
              "ES",
              "FI",
              "FJ",
              "FR",
              "GB",
              "GR",
              "GT",
              "HK",
              "HN",
              "HR",
              "HU",
              "ID",
              "IE",
              "IL",
              "IN",
              "IQ",
              "IS",
              "IT",
              "JO",
              "JP",
              "KW",
              "LB",
              "LT",
              "LU",
              "LV",
              "MA",
              "MK",
              "MT",
              "MX",
              "MY",
              "NI",
              "NL",
              "NO",
              "NZ",
              "OM",
              "PA",
              "PE",
              "PG",
              "PH",
              "PL",
              "PR",
              "PT",
              "PY",
              "QA",
              "RO",
              "RU",
              "SA",
              "SB",
              "SD",
              "SE",
              "SG",
              "SI",
              "SK",
              "SV",
              "SY",
              "TH",
              "TN",
              "TO",
              "TR",
              "TW",
              "UA",
              "US",
              "UY",
              "VE",
              "VN",
              "VU",
              "WS",
              "YE",
              "ZA"
            ]
          },
          "usRegion": {
            "type": "string",
            "enum": [
              "MW",
              "NE",
              "SE",
              "SW",
              "W"
            ]
          },
          "currency": {
            "type": "string",
            "enum": [
              "ALL",
              "DZD",
              "ARS",
              "AUD",
              "BHD",
              "BYR",
              "BOB",
              "BAM",
              "BRL",
              "CAD",
              "CLP",
              "CNY",
              "COP",
              "CRC",
              "HRK",
              "CZK",
              "DKK",
              "DOP",
              "EGP",
              "EUR",
              "GTQ",
              "HNL",
              "HKD",
              "HUF",
              "ISK",
              "INR",
              "IDR",
              "IQD",
              "ILS",
              "JPY",
              "JOD",
              "KWD",
              "LVL",
              "LBP",
              "LTL",
              "MKD",
              "MYR",
              "MXN",
              "MAD",
              "NZD",
              "NIO",
              "NOK",
              "OMR",
              "PAB",
              "PYG",
              "PEN",
              "PHP",
              "PLN",
              "QAR",
              "RON",
              "RUB",
              "SAR",
              "RSD",
              "SGD",
              "ZAR",
              "SDG",
              "SEK",
              "CHF",
              "SYP",
              "TWD",
              "TND",
              "TRY",
              "UAH",
              "AED",
              "GBP",
              "USD",
              "UYU",
              "VEF",
              "VND",
              "YER"
            ]
          },
          "lang": {
            "type": "string",
            "enum": [
              "ALB",
              "ARA",
              "BEL",
              "BUL",
              "CAT",
              "CHI",
              "SCR",
              "CZE",
              "DAN",
              "DUT",
              "ENG",
              "FIN",
              "FRE",
              "GER",
              "GRE",
              "HEB",
              "HIN",
              "HUN",
              "IND",
              "GLE",
              "ITA",
              "JPN",
              "LAV",
              "LIT",
              "MAC",
              "MAY",
              "MLT",
              "NOR",
              "POL",
              "POR",
              "RUM",
              "RUS",
              "SCC",
              "SLO",
              "SPA",
              "THA",
              "TUR",
              "UKR",
              "VIE"
            ]
          },
          "region": {
            "type": "string",
            "enum": [
              "NCSA",
              "EU",
              "EMEA",
              "APJ"
            ]
          },
          "caProvince": {
            "type": "string",
            "enum": [
              "AB",
              "BC",
              "PE",
              "MB",
              "NB",
              "NS",
              "NU",
              "ON",
              "QC",
              "SK",
              "NL",
              "YT",
              "NT"
            ]
          },
          "caRegion": {
            "type": "string",
            "enum": [
              "QC",
              "HQ"
            ]
          }
        }
      },
      "AnySpreadsheetResult": {
        "type": "object",
        "properties": {
          "NeededAnnualPremiumNetComm": {
            "type": "number",
            "format": "double"
          },
          "ExpensesNetCommission": {
            "type": "number",
            "format": "double"
          },
          "RiskAndTaxes": {
            "type": "number",
            "format": "double"
          },
          "LostInterest": {
            "type": "number",
            "format": "double"
          },
          "Lives": {
            "type": "number",
            "format": "double"
          },
          "RiskTaxesPEPM": {
            "type": "number",
            "format": "double"
          },
          "LostInterestPEPM": {
            "type": "number",
            "format": "double"
          },
          "InitialASOFeePEPM": {
            "type": "number",
            "format": "double"
          },
          "PrcntPaidToVSP": {
            "type": "number",
            "format": "double"
          },
          "AnnualToVSP": {
            "type": "number",
            "format": "double"
          },
          "MannualCommission": {
            "type": "number",
            "format": "double"
          },
          "CommissionPEPMOverride": {
            "type": "number",
            "format": "double"
          },
          "PEPMToVSP": {
            "type": "number",
            "format": "double"
          },
          "PEPMToREN0": {
            "type": "number",
            "format": "double"
          },
          "PEPMToREN": {
            "type": "number",
            "format": "double"
          },
          "AdjustedASOFee": {
            "type": "number",
            "format": "double"
          },
          "AnnualASO": {
            "type": "number",
            "format": "double"
          },
          "ProjectedClaimsAnnual": {
            "type": "number",
            "format": "double"
          },
          "NeededAnnualPremiumASO": {
            "type": "number",
            "format": "double"
          },
          "ASOExpensePrcnt": {
            "type": "number",
            "format": "double"
          },
          "tiersCalc": {
            "type": "number",
            "format": "double"
          },
          "tiers": {
            "type": "number",
            "format": "double"
          },
          "tiersDetails": {
            "type": "number",
            "format": "double"
          },
          "AnnualPremiumCurrent": {
            "type": "number",
            "format": "double"
          },
          "AnnualPremiumRenewal": {
            "type": "number",
            "format": "double"
          },
          "Param": {
            "type": "number",
            "format": "double"
          },
          "CompositeRateCurrent": {
            "type": "number",
            "format": "double"
          },
          "CompositeRateRenewal": {
            "type": "number",
            "format": "double"
          },
          "pctRenewalFromCurrent": {
            "type": "number",
            "format": "double"
          },
          "pctFinalFromCurrent": {
            "type": "number",
            "format": "double"
          },
          "pctFinalFromRenewal": {
            "type": "number",
            "format": "double"
          },
          "currentParticipationPct": {
            "type": "number",
            "format": "double"
          },
          "Exception": {
            "type": "number",
            "format": "double"
          },
          "ProposedRates": {
            "type": "number",
            "format": "double"
          },
          "myStep": {
            "type": "number",
            "format": "double"
          },
          "Result": {
            "$ref": "#/components/schemas/AnySpreadsheetResult"
          },
          "moreStep": {
            "$ref": "#/components/schemas/ASOExpense"
          },
          "anoptherStep": {
            "$ref": "#/components/schemas/PlanPremium"
          },
          "myParam": {
            "$ref": "#/components/schemas/MyDatatype"
          },
          "myResult": {
            "$ref": "#/components/schemas/MyAnyRule"
          },
          "spte1": {
            "type": "number",
            "format": "double"
          },
          "step2": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "MyAnyRule": {
        "type": "object",
        "properties": {
          "spte1": {
            "type": "number",
            "format": "double"
          },
          "step2": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "MyDatatype": {
        "type": "object",
        "properties": {
          "param1": {
            "type": "string"
          },
          "param2": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "MySpr": {
        "type": "object",
        "properties": {
          "myStep": {
            "type": "number",
            "format": "double"
          },
          "Result": {
            "$ref": "#/components/schemas/AnySpreadsheetResult"
          },
          "moreStep": {
            "$ref": "#/components/schemas/ASOExpense"
          },
          "anoptherStep": {
            "$ref": "#/components/schemas/PlanPremium"
          },
          "myParam": {
            "$ref": "#/components/schemas/MyDatatype"
          },
          "myResult": {
            "$ref": "#/components/schemas/MyAnyRule"
          }
        }
      },
      "PlanPremium": {
        "type": "object",
        "properties": {
          "tiersCalc": {
            "type": "number",
            "format": "double"
          },
          "tiers": {
            "type": "number",
            "format": "double"
          },
          "tiersDetails": {
            "type": "number",
            "format": "double"
          },
          "AnnualPremiumCurrent": {
            "type": "number",
            "format": "double"
          },
          "AnnualPremiumRenewal": {
            "type": "number",
            "format": "double"
          },
          "Param": {
            "type": "number",
            "format": "double"
          },
          "CompositeRateCurrent": {
            "type": "number",
            "format": "double"
          },
          "CompositeRateRenewal": {
            "type": "number",
            "format": "double"
          },
          "pctRenewalFromCurrent": {
            "type": "number",
            "format": "double"
          },
          "pctFinalFromCurrent": {
            "type": "number",
            "format": "double"
          },
          "pctFinalFromRenewal": {
            "type": "number",
            "format": "double"
          },
          "currentParticipationPct": {
            "type": "number",
            "format": "double"
          },
          "Exception": {
            "type": "number",
            "format": "double"
          },
          "ProposedRates": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "MySprRequest": {
        "type": "object",
        "properties": {
          "runtimeContext": {
            "$ref": "#/components/schemas/DefaultRulesRuntimeContext"
          },
          "param": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "MyRuleRequest": {
        "type": "object",
        "properties": {
          "runtimeContext": {
            "$ref": "#/components/schemas/DefaultRulesRuntimeContext"
          },
          "a": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PlanPremiumRequest": {
        "type": "object",
        "properties": {
          "runtimeContext": {
            "$ref": "#/components/schemas/DefaultRulesRuntimeContext"
          },
          "totalEnlollment": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "MytInfo": {
        "type": "object",
        "properties": {
          "natureField": {
            "type": "string"
          },
          "someStates": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "someDate": {
            "type": "string",
            "format": "date-time"
          },
          "anotherDate": {
            "type": "string",
            "format": "date-time"
          },
          "test": {
            "type": "string"
          }
        }
      },
      "MyFunctionRequest": {
        "type": "object",
        "properties": {
          "runtimeContext": {
            "$ref": "#/components/schemas/DefaultRulesRuntimeContext"
          },
          "s": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "MyAnyRuleRequest": {
        "type": "object",
        "properties": {
          "runtimeContext": {
            "$ref": "#/components/schemas/DefaultRulesRuntimeContext"
          },
          "test": {
            "$ref": "#/components/schemas/MyDatatype"
          },
          "b": {
            "type": "integer",
            "format": "int32"
          },
          "c": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpreadsheetResult"
            }
          }
        }
      },
      "SpreadsheetResult": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          },
          "columnNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "rowNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    }
  }
}