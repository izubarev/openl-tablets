<ui:composition
        xmlns:ui="http://java.sun.com/jsf/facelets"
        xmlns:h="http://java.sun.com/jsf/html"
        xmlns:f="http://java.sun.com/jsf/core"
        xmlns:c="http://java.sun.com/jsp/jstl/core"
        xmlns:fn="http://java.sun.com/jsp/jstl/functions"
>

    <c:set var="contextPath" value="#{facesContext.externalContext.request.contextPath}" />

    <ui:param name="failuresOnly" value="#{testBean.testsFailuresOnly}" />
    <ui:param name="complexResult" value="#{testBean.showComplexResult}" />
    <c:set var="failuresPerTest" value="#{testBean.testsFailuresPerTest}" />

    <script src="#{contextPath}/webresource/js/tooltip.js"></script>
    <script>
        function explain(url) {
           window.open('#{contextPath}/faces/pages/layout/frameView.xhtml' + url
               + '&amp;requestId=#{mainBean.requestId}'
               + '&amp;title=Explanation&amp;treePage=faces/pages/modules/explain/explain.xhtml&amp;mainPage=faces/pages/modules/explain/showExplainTable.xhtml',"_blank","toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=yes, resizable=yes, copyhistory=yes, width=1240, height=700")
        }

        $j(function () {
            ws.nav.setRequestId('#{mainBean.requestId}')
        });
    </script>

    <div class="page">

        <h:panelGroup rendered="#{!testBean.test}">
        <h1 class="page-header">
            <span>Tests: #{testBean.numberOfTests}</span>
            <h:outputText value="#{testBean.numberOfFailedTests} failed"
                rendered="#{testBean.numberOfFailedTests > 0}"
                styleClass="badge badge-error" style="margin-left:7px;font-size: 11px; font-weight: normal" />

            <c:set var="nearbyPages" value="2" />
            <c:set var="interval" value="#{nearbyPages * 2 + 1}" />
            <c:set var="curPage" value="#{testBean.page}" />
            <c:set var="maxPage" value="#{testBean.lastPage}" />
            <c:set var="firstPage" value="#{curPage - nearbyPages > 0 and maxPage > interval ? (maxPage > curPage + nearbyPages ? curPage - nearbyPages : maxPage - interval + 1) : '1'}" />
            <c:set var="lastPage" value="#{(firstPage + interval - 1) > maxPage ? maxPage : (firstPage + interval - 1)}" />
            <c:set var="perPage" value="#{testBean.testsPerPage}" />

            <c:set var="pageUri" value="#{studio.url('test/test')}" />
            <c:set var="pageUriPagerExtra" value="&amp;pp=#{perPage}#{!empty param.id ? ('&amp;id='.concat(param.id)) : ''}#{!empty param.failuresOnly ? ('&amp;failuresOnly='.concat(failuresOnly).concat('&amp;failures=').concat(failuresPerTest)) : ''}#{!empty param.complexResult ? ('&amp;complexResult='.concat(complexResult)) : ''}" />

            <span style="font-size: 13px;">
                <span class="dropdown" style="position:absolute;top:20px;margin-left:90px">
                    <a class="dropdown-toggle link-dropdown" data-toggle="dropdown" href="#">#{perPage == -1 ? 'All' : perPage}</a>
                    per page
                    <ul class="dropdown-menu link-dropdown-menu" role="menu">
                        <li><a tabindex="-1" href="javascript:void(0)" onclick="ws.nav.reload({'pp':1})">1</a></li>
                        <li><a tabindex="-1" href="javascript:void(0)" onclick="ws.nav.reload({'pp':5})">5</a></li>
                        <li><a tabindex="-1" href="javascript:void(0)" onclick="ws.nav.reload({'pp':20})">20</a></li>
                        <li class="divider"></li>
                        <li><a tabindex="-1" href="javascript:void(0)" onclick="ws.nav.reload({'pp':-1})">All</a></li>
                    </ul>
                </span>

                <span style="position:absolute;top:19px;margin-left:230px">
                    <label title="Show only failed test cases">
                        Failures Only <input type="checkbox" style="vertical-align:-2px" checked="#{failuresOnly ? 'checked' : ''}"
                        onchange="ws.nav.reload({'failuresOnly':this.checked})" />
                    </label>
                    <h:panelGroup class="dropdown" rendered="#{failuresOnly}">
                        <a class="dropdown-toggle link-dropdown" data-toggle="dropdown" href="#">#{failuresPerTest == -1 ? 'All' : failuresPerTest}</a>
                        first
                        <ul class="dropdown-menu link-dropdown-menu" role="menu">
                            <li><a tabindex="-1" href="javascript:void(0)" onclick="ws.nav.reload({'failures':1})">1</a></li>
                            <li><a tabindex="-1" href="javascript:void(0)" onclick="ws.nav.reload({'failures':5})">5</a></li>
                            <li><a tabindex="-1" href="javascript:void(0)" onclick="ws.nav.reload({'failures':20})">20</a></li>
                            <li class="divider"></li>
                            <li><a tabindex="-1" href="javascript:void(0)" onclick="ws.nav.reload({'failures':-1})">All</a></li>
                        </ul>
                    </h:panelGroup>
                    <label title="Display the full result of running test cases, not only values which are being tested" style="margin-left:50px">
                        Compound Result <input type="checkbox" style="vertical-align:-2px" checked="#{complexResult ? 'checked' : ''}"
                        onchange="ws.nav.reload({'complexResult':this.checked})" />
                    </label>
                </span>
            </span>

        </h1>
        </h:panelGroup>

        <h:panelGroup rendered="#{testBean.test}">
        <h1 class="page-header">
            <h:outputText value="Results of running "/>
            <h:outputLink value="#{studio.url('table')}">
                <f:param name="id" value="#{param.id}" />
                <h:outputText value="#{testBean.testedTableName}" />
            </h:outputLink>
        </h1>
        </h:panelGroup>

        <div style="margin-top: 33px;">
            <h:outputText value="View expired. Test data is no more available." rendered="#{testBean.expired}" />

            <h:panelGroup class="pagination pagination-mini pagination-centered" rendered="#{maxPage > 1}" layout="block">
                <ul>
                    <c:if test="#{curPage == 1}">
                        <li class="disabled"><span>«</span></li>
                        <li class="disabled"><span>Prev</span></li>
                    </c:if>
                    <c:if test="#{curPage > 1}">
                        <li><a href="#{pageUri}?p=1#{pageUriPagerExtra}">«</a></li>
                        <li><a href="#{pageUri}?p=#{curPage - 1}#{pageUriPagerExtra}">Prev</a></li>
                    </c:if>
                    <c:forEach begin="#{firstPage}" end="#{lastPage}" var="page">
                    <li class="#{curPage == page ? 'active': ''}"><a href="#{pageUri}?p=#{page}#{pageUriPagerExtra}">#{page}</a></li>
                    </c:forEach>
                    <c:if test="#{curPage == maxPage}">
                        <li class="disabled"><span>Next</span></li>
                        <li class="disabled"><span>»</span></li>
                    </c:if>
                    <c:if test="#{curPage != maxPage}">
                        <li><a href="#{pageUri}?p=#{curPage + 1}#{pageUriPagerExtra}">Next</a></li>
                        <li><a href="#{pageUri}?p=#{maxPage}#{pageUriPagerExtra}">»</a></li>
                    </c:if>
                </ul>
            </h:panelGroup>

            <h:panelGroup rendered="#{!testBean.expired}">
                <h:form>
                <ui:repeat value="#{testBean.ranTests}" var="test">
                <ui:param name="testFailed" value="#{test.numberOfFailures > 0}" />
                <div class="test">
                    <h1>
                        <h:outputLink value="#{studio.url('table', test.testSuite.testSuiteMethod.syntaxNode.uri)}"
                            styleClass="#{testFailed ? 'testError' : 'testSuccess'}">
                            <f:param name="id" value="#{testBean.getTestTableId(test)}" />
                            <h:outputText value="#{testBean.getTestTableName(test)}" />
                        </h:outputLink>
                        <span class="badge">#{testBean.getTestTableInfo(test)}</span>
                        <h:panelGroup rendered="#{testFailed}"><span class="badge badge-error" style="margin-left:3px" title="#{test.numberOfFailures} failed">#{test.numberOfFailures}</span>
                        </h:panelGroup>
                    </h1>


                    <h:panelGroup styleClass="problem-warning" style="margin-top: 3px; display: inline-block"
                                  rendered="#{test.testedRulesHaveErrors}">
                        <h:outputText value="Tested rules have errors"/>
                    </h:panelGroup>


                    <h:panelGroup rendered="#{!test.testedRulesHaveErrors and (testFailed or !failuresOnly)}">

                        <ui:param name="columnCount"
                                  value="#{(test.hasDescription() ? 1 : 0) + (test.hasContext() ? fn:length(test.contextColumnDisplayNames) : 0) + fn:length(test.testDataColumnDisplayNames) + fn:length(test.testResultColumnDisplayNames)}"/>
                        <ui:param name="filteredTests" value="#{test.getFilteredTestUnits(failuresOnly,failuresPerTest)}"/>
                        <ui:param name="testsToRender" value="#{testBean.getTestsToRender(filteredTests, columnCount)}"/>

                        <table class="table">
                        <thead>
                        <tr>
                            <th>ID</th>
                            <h:panelGroup rendered="#{test.hasDescription()}">
                                <th>Description</th>
                            </h:panelGroup>
                            <h:panelGroup rendered="#{test.hasContext()}">
                                <ui:repeat value="#{test.contextColumnDisplayNames}" var="contextHeader">
                                    <th>#{contextHeader}</th>
                                </ui:repeat>
                            </h:panelGroup>
                            <ui:repeat value="#{test.testDataColumnDisplayNames}" var="parameterHeader">
                                <th>#{parameterHeader}</th>
                            </ui:repeat>
                            <ui:repeat value="#{test.testResultColumnDisplayNames}" var="resultHeader">
                                <th colspan="2">#{resultHeader}</th>
                            </ui:repeat>
                            <h:panelGroup rendered="#{complexResult and testBean.hasComplexResults(test)}">
                                <th>Compound Result</th>
                            </h:panelGroup>
                        </tr>
                        </thead>

                        <tbody>
                        <ui:repeat value="#{testsToRender}" var="testCase">
                        <ui:param name="compareResult" value="#{testCase.resultStatus}" />
                        <h:panelGroup>
                            <tr>
                                <td>
                                    <div style="display:flex">
                                        <span style="min-height: 15px; padding-right: 3px; display: inline-block;">#{testCase.test.id}</span>
                                        <span style="min-height: 15px;  display: inline-block;"
                                              class="#{testCase.getResultStatus() == 'TR_OK' ? 'case-success' : 'case-error'}">
                                        <h:panelGroup rendered="#{testCase.getResultStatus() != 'TR_OK'}">
                                            <b>(#{testCase.getNumberOfFailedTests()})</b>
                                        </h:panelGroup>
                                        </span>
                                    </div>
                                </td>
                                <h:panelGroup rendered="#{test.hasDescription()}">
                                    <td><h:outputText value="#{testCase.getDescription()}" /></td>
                                </h:panelGroup>
                                <h:panelGroup rendered="#{test.hasContext()}">
                                    <ui:repeat value="#{testCase.getContextParams(test)}" var="context">
                                    <td>
                                        <ui:include src="/pages/modules/test/parameter.xhtml">
                                            <ui:param name="parameter" value="#{context}" />
                                            <ui:param name="requestId" value="#{mainBean.requestId}" />
                                        </ui:include></td>
                                    </ui:repeat>
                                </h:panelGroup>
                                <ui:repeat value="#{testCase.test.executionParams}" var="parameter">
                                <td>
                                    <ui:include src="/pages/modules/test/parameter.xhtml">
                                        <ui:param name="parameter" value="#{parameter}" />
                                        <ui:param name="requestId" value="#{mainBean.requestId}" />
                                    </ui:include></td>
                                </ui:repeat>
                                <h:panelGroup rendered="#{compareResult != 'TR_EXCEPTION'}">
                                    <h:panelGroup>
                                        <ui:repeat value="#{testCase.resultParams}" var="resultParam">
                                            <td>
                                                <div class="case-result #{!test.runmethod ? (resultParam.status == 'TR_OK' ? 'case-success' : 'case-error') : ''}">
                                                    <h:panelGroup rendered="#{!testBean.isResultThrowable(testCase)}">
                                                        <h:panelGroup rendered="#{helper.isSpreadsheetResult(resultParam.actualValue.value)}">
                                                            <h:outputText value="#{testBean.getFormattedSpreadsheetResult(resultParam.actualValue.value)}"
                                                                              escape="false" />

                                                        </h:panelGroup>
                                                        <h:panelGroup rendered="#{!helper.isSpreadsheetResult(resultParam.actualValue.value)}">
                                                            <h:panelGroup rendered="#{!helper.isExplanationValue(resultParam.actualValue.value)}">
                                                                <ui:include src="/pages/modules/test/parameter.xhtml">
                                                                    <ui:param name="parameter" value="#{resultParam.actualValue}" />
                                                                    <ui:param name="requestId" value="#{mainBean.requestId}" />
                                                                </ui:include>
                                                            </h:panelGroup>
                                                            <h:panelGroup rendered="#{helper.isExplanationValue(resultParam.actualValue.value)}">
                                                                <h:outputLink
                                                                    value="javascript:explain('?rootID=#{helper.getExplanatorId(mainBean.requestId, resultParam.actualValue.value)}')">
                                                                    <h:outputText value="#{helper.format(resultParam.actualValue.value)}" />
                                                                </h:outputLink>
                                                            </h:panelGroup>
                                                        </h:panelGroup>
                                                    </h:panelGroup>
                                                    <h:panelGroup rendered="#{testBean.isResultThrowable(testCase)}">
                                                        <ui:repeat value="#{testCase.errors}" var="message">
                                                            <span>#{message.summary}</span><br />
                                                        </ui:repeat>
                                                    </h:panelGroup>
                                                </div>
                                            </td>
                                            <td style="padding-left:0">
                                                <div class="case-result">
                                                    <h:panelGroup rendered="#{resultParam.status == 'TR_NEQ'}"><span class="case-expected">Expected: </span>
                                                        <f:subview id="res-tr-neq">
                                                        <ui:include src="/pages/modules/test/parameter.xhtml">
                                                            <ui:param name="parameter" value="#{resultParam.expectedValue}" />
                                                            <ui:param name="requestId" value="#{mainBean.requestId}" />
                                                        </ui:include>
                                                        </f:subview>
                                                    </h:panelGroup>
                                                </div>
                                            </td>
                                        </ui:repeat>
                                    </h:panelGroup>
                                </h:panelGroup>
                                <h:panelGroup rendered="#{compareResult == 'TR_EXCEPTION'}">
                                    <td colspan="#{fn:length(test.testResultColumnDisplayNames) * 2 + (testBean.hasComplexResults(test) ? 1 : 0)}">
                                        <ui:include src="/pages/modules/messages.xhtml">
                                            <ui:param name="messages" value="#{testCase.errors}" />
                                            <ui:param name="editable" value="#{studio.model.editable}" />
                                        </ui:include>
                                    </td>
                                </h:panelGroup>
                                <h:panelGroup rendered="#{complexResult and testBean.isComplexResult(testCase)}">
                                    <h:panelGroup rendered="#{helper.isSpreadsheetResult(testCase.actualResult)}">
                                        <td>
                                            <div class="case-result #{!test.runmethod ? (compareResult == 'TR_OK' ? 'case-success' : 'case-error') : ''}">
                                                <h:outputText escape="false"
                                                              value="#{testBean.getFormattedSpreadsheetResultFromTestUnit(testCase)}"/>
                                            </div>
                                        </td>
                                    </h:panelGroup>
                                    <h:panelGroup rendered="#{!helper.isSpreadsheetResult(testCase.actualResult)}">
                                        <td>
                                            <div class="case-result #{!test.runmethod ? (compareResult == 'TR_OK' ? 'case-success' : 'case-error') : ''}">
                                                <ui:include src="/pages/modules/test/parameter.xhtml">
                                                    <ui:param name="parameter" value="#{testCase.actualParam}"/>
                                                    <ui:param name="requestId" value="#{mainBean.requestId}" />
                                                </ui:include>
                                            </div>
                                        </td>
                                    </h:panelGroup>
                                </h:panelGroup>
                            </tr>
                            </h:panelGroup>
                        </ui:repeat>
                        </tbody>
                    </table>

                    <ui:param name="maxRowsToDisplay" value="#{testBean.getMaxNumRowsToDisplay(filteredTests, columnCount)}"/>
                    <h:panelGroup rendered="#{maxRowsToDisplay > -1}">
                        <div class='te_bigtable_mes'>
                            <div class='te_bigtable_mes_header'>Test results are displayed partially (the first #{maxRowsToDisplay} rows).</div>
                            <div>Use 'Run into File' to see all the test results.</div>
                        </div>
                    </h:panelGroup>

                    </h:panelGroup>
                </div>
                </ui:repeat>

                <h:panelGroup class="pagination pagination-mini pagination-centered" rendered="#{maxPage > 1}" layout="block">
                <ul>
                    <li><a href="#{pageUri}?p=1#{pageUriPagerExtra}">«</a></li>
                    <c:if test="#{curPage == 1}">
                    <li class="disabled"><span>Prev</span></li>
                    </c:if>
                    <c:if test="#{curPage > 1}">
                    <li><a href="#{pageUri}?p=#{curPage - 1}#{pageUriPagerExtra}">Prev</a></li>
                    </c:if>
                    <c:forEach begin="#{firstPage}" end="#{lastPage}" var="page">
                    <li class="#{curPage == page ? 'active': ''}"><a href="#{pageUri}?p=#{page}#{pageUriPagerExtra}">#{page}</a></li>
                    </c:forEach>
                    <c:if test="#{curPage == maxPage}">
                    <li class="disabled"><span>Next</span></li>
                    </c:if>
                    <c:if test="#{curPage != maxPage}">
                    <li><a href="#{pageUri}?p=#{curPage + 1}#{pageUriPagerExtra}">Next</a></li>
                    </c:if>
                    <li><a href="#{pageUri}?p=#{maxPage}#{pageUriPagerExtra}">»</a></li>
                </ul>
            </h:panelGroup>

            </h:form>

            </h:panelGroup>
        </div>
    </div>

</ui:composition>
