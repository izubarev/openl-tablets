<ui:composition
  xmlns:f="http://java.sun.com/jsf/core"
  xmlns:h="http://java.sun.com/jsf/html"
  xmlns:a4j="http://richfaces.org/a4j"
  xmlns:rich="http://richfaces.org/rich"
  xmlns:ui="http://java.sun.com/jsf/facelets"
  xmlns:oh="http://openl-tablets.sf.net/jsf/html">

  <ui:param name="openedForEditing" value="#{artefact.project.openedForEditing}" />
  <ui:param name="hasRulesDeploy" value="#{repositoryProjectRulesDeployConfig.rulesDeploy != null}" />
    <h:outputStylesheet>
        #publishers {
            border-spacing: 0;
        }
        #publishers td:first-child {
            padding-left: 0;
        }
        #publishers label {
            padding-right: 15px;
        }
        #rules-deploy-configuration-form .label {
            width: 200px;
        }
    </h:outputStylesheet>

  <h:panelGroup rendered="#{!hasRulesDeploy}">
    <a4j:commandButton value="Create rules deploy configuration" action="#{repositoryProjectRulesDeployConfig.createRulesDeploy}"
                       onclick="return canOverwriteRevision();"
                       render="nodeView"
                       rendered="#{openedForEditing}"/>
    <h:outputText value="Rules deploy configuration is absent" rendered="#{!openedForEditing}"/>
  </h:panelGroup>

  <h:panelGroup rendered="#{hasRulesDeploy}">
    <h:panelGrid columns="2" columnClasses="label," id="rules-deploy-configuration-form">
      <ui:param name="rulesDeploy" value="#{repositoryProjectRulesDeployConfig.rulesDeploy}" />

      <h:outputLabel for="#{prefix}provideRuntimeContext" value="Provide runtime context:"/>
      <h:selectBooleanCheckbox id="#{prefix}provideRuntimeContext" value="#{rulesDeploy.provideRuntimeContext}" disabled="#{!openedForEditing}"/>

      <h:outputLabel for="#{prefix}provideVariations" value="Provide variations:"/>
      <h:selectBooleanCheckbox id="#{prefix}provideVariations" value="#{rulesDeploy.provideVariations}" disabled="#{!openedForEditing}"/>

      <h:outputLabel for="#{prefix}publishers" value="Create services:" rendered="#{repositoryProjectRulesDeployConfig.publishersSupported}"/>
      <h:panelGroup rendered="#{repositoryProjectRulesDeployConfig.publishersSupported}">
        <h:selectManyCheckbox id="#{prefix}publishers" value="#{rulesDeploy.publishers}" disabled="#{!openedForEditing}"
                              required="true" layout="lineDirection" requiredMessage="Please, select at least one service">
           <f:selectItems value="#{rulesDeploy.availablePublishers}" var="publisher" itemValue="#{publisher}" itemLabel="#{msg['ws.deploy.publisher.'.concat(publisher)]}" />
        </h:selectManyCheckbox>
        <h:message errorStyle="color:red; display:block" for="#{prefix}publishers" />
      </h:panelGroup>
      
      <h:outputLabel for="#{prefix}serviceName" value="Service name:"/>
      <h:panelGroup>
          <h:inputText id="#{prefix}serviceName" maxlength="100" size="40" value="#{rulesDeploy.serviceName}"
                       rendered="#{openedForEditing}"
                       validator="#{repositoryProjectRulesDeployConfig.validateServiceName}"/>
          <h:outputText value="#{rulesDeploy.serviceName}" rendered="#{!openedForEditing}"/>
          <h:message for="#{prefix}serviceName" styleClass="error" style="display: block" />
      </h:panelGroup>

      <h:outputLabel for="#{prefix}serviceClass" value="Service class:"/>
      <h:panelGroup>
          <h:inputText id="#{prefix}serviceClass" maxlength="100" size="40" value="#{rulesDeploy.serviceClass}"
                       rendered="#{openedForEditing}"
                       validator="#{repositoryProjectRulesDeployConfig.validateServiceClass}"/>
          <h:outputText value="#{rulesDeploy.serviceClass}" rendered="#{!openedForEditing}"/>
          <h:message for="#{prefix}serviceClass" styleClass="error" style="display: block" />
      </h:panelGroup>
      
      <h:outputLabel for="#{prefix}rmiServiceClass" value="RMI Service class:" rendered="#{repositoryProjectRulesDeployConfig.rmiServiceClassSupported}"/>
      <h:panelGroup rendered="#{repositoryProjectRulesDeployConfig.rmiServiceClassSupported}">
          <h:inputText id="#{prefix}rmiServiceClass" maxlength="100" size="40" value="#{rulesDeploy.rmiServiceClass}"
                       rendered="#{openedForEditing}"
                       validator="#{repositoryProjectRulesDeployConfig.validateServiceClass}"/>
          <h:outputText value="#{rulesDeploy.rmiServiceClass}" rendered="#{!openedForEditing}"/>
          <h:message for="#{prefix}rmiServiceClass" styleClass="error" style="display: block" />
      </h:panelGroup>

      <h:outputLabel for="#{prefix}version" value="Version:" rendered="#{repositoryProjectRulesDeployConfig.versionSupported}"/>
      <h:panelGroup id="#{prefix}version" style="white-space: nowrap;" rendered="#{repositoryProjectRulesDeployConfig.versionSupported}">
          <oh:inputVersion value="#{rulesDeploy.version}" id="#{prefix}input-version" shortView="true" rendered="#{openedForEditing}"/>
          <h:outputText value="#{rulesDeploy.version}" rendered="#{!openedForEditing}"/>
      </h:panelGroup>

      <h:outputLabel for="#{prefix}url" value="URL:"/>
      <h:panelGroup>
          <h:inputText id="#{prefix}url" maxlength="100" size="40" value="#{rulesDeploy.url}" rendered="#{openedForEditing}"/>
          <h:outputText value="#{rulesDeploy.url}" rendered="#{!openedForEditing}"/>
      </h:panelGroup>

      <h:outputLabel for="#{prefix}interceptingTemplateClassName" value="Intercepting template class:" rendered="#{!repositoryProjectRulesDeployConfig.annotationTemplateClassNameSupported}"/>
      <h:panelGroup rendered="#{!repositoryProjectRulesDeployConfig.annotationTemplateClassNameSupported}">
          <h:inputText id="#{prefix}interceptingTemplateClassName" maxlength="100" size="40" value="#{rulesDeploy.interceptingTemplateClassName}" rendered="#{openedForEditing}" validator="#{repositoryProjectRulesDeployConfig.validateServiceClass}"/>
          <h:outputText value="#{rulesDeploy.interceptingTemplateClassName}" rendered="#{!openedForEditing}"/>
          <h:message for="#{prefix}interceptingTemplateClassName" styleClass="error" style="display: block" />
      </h:panelGroup>

      <h:outputLabel for="#{prefix}templateClassName" value="Template class:" rendered="#{repositoryProjectRulesDeployConfig.annotationTemplateClassNameSupported}"/>
      <h:panelGroup rendered="#{repositoryProjectRulesDeployConfig.annotationTemplateClassNameSupported}">
            <h:inputText id="#{prefix}templateClassName" maxlength="100" size="40" value="#{rulesDeploy.templateClassName}" rendered="#{openedForEditing}" validator="#{repositoryProjectRulesDeployConfig.validateServiceClass}"/>
            <h:outputText value="#{rulesDeploy.templateClassName}" rendered="#{!openedForEditing}"/>
            <h:message for="#{prefix}templateClassName" styleClass="error" style="display: block" />
      </h:panelGroup>

      <h:outputLabel for="#{prefix}groups" value="Service groups:" rendered="#{repositoryProjectRulesDeployConfig.groupsSupported}"/>
      <h:panelGroup rendered="#{repositoryProjectRulesDeployConfig.groupsSupported}">
          <h:inputText id="#{prefix}groups" maxlength="100" size="40" value="#{rulesDeploy.groups}" rendered="#{openedForEditing}"/>
          <h:outputText value="#{rulesDeploy.groups}" rendered="#{!openedForEditing}"/>
      </h:panelGroup>

      <h:outputLabel for="#{prefix}configuration" value="Configuration (XML):"/>
      <h:panelGroup>
          <h:inputTextarea id="#{prefix}configuration" cols="30" rows="4" value="#{rulesDeploy.configuration}" rendered="#{openedForEditing}" styleClass="code"/>
          <h:outputText value="#{rulesDeploy.configuration}" rendered="#{!openedForEditing}"/>
      </h:panelGroup>
    </h:panelGrid>

    <br />
    <br />
    <a4j:commandButton value="Save Configuration" action="#{repositoryProjectRulesDeployConfig.saveRulesDeploy}"
                       rendered="#{openedForEditing}" render="projectTree nodeView"
                       onclick="return canOverwriteRevision();"
                       styleClass="save-deploy-configuration-button button-primary"/>
    <a4j:commandButton value="Delete Configuration" action="#{repositoryProjectRulesDeployConfig.deleteRulesDeploy}" immediate="true"
                       rendered="#{openedForEditing}" render="projectTree nodeView"
                       onclick="if (!canOverwriteRevision()) return false; if(!window.confirm('Are you sure you want to delete the rules deploy configuration?')) {return false;}"/>
      <script>
          $j(function () {
              $j('.save-deploy-configuration-button').prop("disabled", true);
              $j("#rules-deploy-configuration-form").areYouSure();
              // Enable save button only if the form is dirty - using events.
              $j("#rules-deploy-configuration-form").bind('dirty.areYouSure', function () {
                  $j('.save-deploy-configuration-button').prop("disabled", false);
              });
              $j("#rules-deploy-configuration-form").bind('clean.areYouSure', function () {
                  $j('.save-deploy-configuration-button').prop("disabled", true);
              });
          });
      </script>
  </h:panelGroup>

</ui:composition>
